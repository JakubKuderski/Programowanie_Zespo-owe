# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.image import Image
from openapi_server import util

from openapi_server.models.image import Image  # noqa: E501

class MetaPage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain=None, name=None, author=None, logo=None, languages=None):  # noqa: E501
        """MetaPage - a model defined in OpenAPI

        :param domain: The domain of this MetaPage.  # noqa: E501
        :type domain: str
        :param name: The name of this MetaPage.  # noqa: E501
        :type name: str
        :param author: The author of this MetaPage.  # noqa: E501
        :type author: str
        :param logo: The logo of this MetaPage.  # noqa: E501
        :type logo: Image
        :param languages: The languages of this MetaPage.  # noqa: E501
        :type languages: List[str]
        """
        self.openapi_types = {
            'domain': str,
            'name': str,
            'author': str,
            'logo': Image,
            'languages': List[str]
        }

        self.attribute_map = {
            'domain': 'domain',
            'name': 'name',
            'author': 'author',
            'logo': 'logo',
            'languages': 'languages'
        }

        self._domain = domain
        self._name = name
        self._author = author
        self._logo = logo
        self._languages = languages

    @classmethod
    def from_dict(cls, dikt) -> 'MetaPage':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MetaPage of this MetaPage.  # noqa: E501
        :rtype: MetaPage
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this MetaPage.


        :return: The domain of this MetaPage.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this MetaPage.


        :param domain: The domain of this MetaPage.
        :type domain: str
        """

        self._domain = domain

    @property
    def name(self):
        """Gets the name of this MetaPage.


        :return: The name of this MetaPage.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MetaPage.


        :param name: The name of this MetaPage.
        :type name: str
        """

        self._name = name

    @property
    def author(self):
        """Gets the author of this MetaPage.


        :return: The author of this MetaPage.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this MetaPage.


        :param author: The author of this MetaPage.
        :type author: str
        """

        self._author = author

    @property
    def logo(self):
        """Gets the logo of this MetaPage.


        :return: The logo of this MetaPage.
        :rtype: Image
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this MetaPage.


        :param logo: The logo of this MetaPage.
        :type logo: Image
        """

        self._logo = logo

    @property
    def languages(self):
        """Gets the languages of this MetaPage.


        :return: The languages of this MetaPage.
        :rtype: List[str]
        """
        return self._languages

    @languages.setter
    def languages(self, languages):
        """Sets the languages of this MetaPage.


        :param languages: The languages of this MetaPage.
        :type languages: List[str]
        """

        self._languages = languages
