# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ImageIdBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alt=None, title=None):  # noqa: E501
        """ImageIdBody - a model defined in OpenAPI

        :param alt: The alt of this ImageIdBody.  # noqa: E501
        :type alt: str
        :param title: The title of this ImageIdBody.  # noqa: E501
        :type title: str
        """
        self.openapi_types = {
            'alt': str,
            'title': str
        }

        self.attribute_map = {
            'alt': 'alt',
            'title': 'title'
        }

        self._alt = alt
        self._title = title

    @classmethod
    def from_dict(cls, dikt) -> 'ImageIdBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The image_id_body of this ImageIdBody.  # noqa: E501
        :rtype: ImageIdBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alt(self):
        """Gets the alt of this ImageIdBody.


        :return: The alt of this ImageIdBody.
        :rtype: str
        """
        return self._alt

    @alt.setter
    def alt(self, alt):
        """Sets the alt of this ImageIdBody.


        :param alt: The alt of this ImageIdBody.
        :type alt: str
        """

        self._alt = alt

    @property
    def title(self):
        """Gets the title of this ImageIdBody.


        :return: The title of this ImageIdBody.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ImageIdBody.


        :param title: The title of this ImageIdBody.
        :type title: str
        """

        self._title = title
