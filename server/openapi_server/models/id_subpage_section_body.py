# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class IdSubpageSectionBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alias=None, value=None):  # noqa: E501
        """IdSubpageSectionBody - a model defined in OpenAPI

        :param alias: The alias of this IdSubpageSectionBody.  # noqa: E501
        :type alias: str
        :param value: The value of this IdSubpageSectionBody.  # noqa: E501
        :type value: Dict[str, object]
        """
        self.openapi_types = {
            'alias': str,
            'value': Dict[str, object]
        }

        self.attribute_map = {
            'alias': 'alias',
            'value': 'value'
        }

        self._alias = alias
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'IdSubpageSectionBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The id_subpage_section_body of this IdSubpageSectionBody.  # noqa: E501
        :rtype: IdSubpageSectionBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alias(self):
        """Gets the alias of this IdSubpageSectionBody.

        alias of a section  # noqa: E501

        :return: The alias of this IdSubpageSectionBody.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this IdSubpageSectionBody.

        alias of a section  # noqa: E501

        :param alias: The alias of this IdSubpageSectionBody.
        :type alias: str
        """
        if alias is None:
            raise ValueError("Invalid value for `alias`, must not be `None`")  # noqa: E501

        self._alias = alias

    @property
    def value(self):
        """Gets the value of this IdSubpageSectionBody.

        value of a section  # noqa: E501

        :return: The value of this IdSubpageSectionBody.
        :rtype: Dict[str, object]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this IdSubpageSectionBody.

        value of a section  # noqa: E501

        :param value: The value of this IdSubpageSectionBody.
        :type value: Dict[str, object]
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501

        self._value = value
